"""Add optionsContract; add SymbolModel

Revision ID: d8dc3ec3f44f
Revises: 9ad8b0c6358c
Create Date: 2025-05-26 19:21:08.044705

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd8dc3ec3f44f'
down_revision: Union[str, None] = '9ad8b0c6358c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_market_data_contract_time', table_name='options_market_data')
    op.drop_index('idx_market_data_latest', table_name='options_market_data')
    op.drop_index('idx_market_data_timestamp', table_name='options_market_data')
    op.drop_index('idx_market_data_tradeable', table_name='options_market_data', postgresql_where='(is_tradeable = true)')
    op.drop_index('idx_market_data_volume', table_name='options_market_data')
    op.drop_index('ix_options_market_data_contract_id', table_name='options_market_data')
    op.drop_index('ix_options_market_data_data_timestamp', table_name='options_market_data')
    op.drop_table('options_market_data')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('options_market_data',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('contract_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('underlying_price', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True),
    sa.Column('bid', sa.NUMERIC(precision=10, scale=4), autoincrement=False, nullable=True),
    sa.Column('ask', sa.NUMERIC(precision=10, scale=4), autoincrement=False, nullable=True),
    sa.Column('bid_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ask_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_price', sa.NUMERIC(precision=10, scale=4), autoincrement=False, nullable=True),
    sa.Column('last_trade_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_trade_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mark_price', sa.NUMERIC(precision=10, scale=4), autoincrement=False, nullable=True),
    sa.Column('volume', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('open_interest', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('delta', sa.NUMERIC(precision=8, scale=6), autoincrement=False, nullable=True),
    sa.Column('gamma', sa.NUMERIC(precision=10, scale=8), autoincrement=False, nullable=True),
    sa.Column('theta', sa.NUMERIC(precision=10, scale=8), autoincrement=False, nullable=True),
    sa.Column('vega', sa.NUMERIC(precision=10, scale=8), autoincrement=False, nullable=True),
    sa.Column('rho', sa.NUMERIC(precision=10, scale=8), autoincrement=False, nullable=True),
    sa.Column('implied_volatility', sa.NUMERIC(precision=8, scale=6), autoincrement=False, nullable=True),
    sa.Column('days_to_expiration', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('in_the_money', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('near_the_money', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_tradeable', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('quote_condition', sa.VARCHAR(length=5), autoincrement=False, nullable=True),
    sa.Column('data_source', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['options_contracts.id'], name='options_market_data_contract_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='options_market_data_pkey')
    )
    op.create_index('ix_options_market_data_data_timestamp', 'options_market_data', ['data_timestamp'], unique=False)
    op.create_index('ix_options_market_data_contract_id', 'options_market_data', ['contract_id'], unique=False)
    op.create_index('idx_market_data_volume', 'options_market_data', ['volume'], unique=False)
    op.create_index('idx_market_data_tradeable', 'options_market_data', ['is_tradeable'], unique=False, postgresql_where='(is_tradeable = true)')
    op.create_index('idx_market_data_timestamp', 'options_market_data', ['data_timestamp'], unique=False)
    op.create_index('idx_market_data_latest', 'options_market_data', ['contract_id', 'data_timestamp'], unique=False)
    op.create_index('idx_market_data_contract_time', 'options_market_data', ['contract_id', 'data_timestamp'], unique=False)
    # ### end Alembic commands ###
